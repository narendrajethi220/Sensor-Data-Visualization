 if you are directly receiving the URLs for the four images from the backend, you can simplify the code and skip the generation of image URLs in the frontend. You can directly set the received URLs into the state. Here's how you can modify the fetchDataFromBackend function:
Update to this:
import React, { useState, useEffect } from "react";
import Navbar from "./components/Navbar";
import "./App.css";
import ImageDisplay from "./components/ImageDisplay";

const App = () => {
  const [selectedType, setSelectedType] = useState(1);
  const [images, setImages] = useState([]);

  useEffect(() => {
    // Fetch initial data when the component mounts
    fetchDataFromBackend(selectedType);
  }, [selectedType]);

  const fetchDataFromBackend = async (type) => {
    try {
      // Simulate fetching data from the backend (replace with actual API calls)
      const response = await fetch(`/api/getImages?type=${type}`);
      const imageUrls = await response.json();

      // Update state with the received image URLs
      setImages(imageUrls);

      console.log(`Fetching data for Type ${type} from the backend...`);
    } catch (error) {
      console.error('Error fetching data:', error);
    }
  };

  const handleSelectType = (type) => {
    // Handle type selection here
    fetchDataFromBackend(type);
    setSelectedType(type);
  };

  return (
    <div>
      <Navbar onSelectType={handleSelectType} />
      <h2 className="image-header">
        Images For Type <span className="type">{selectedType}</span>
      </h2>
      <ImageDisplay images={images} />
    </div>
  );
};

export default App;
